{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Modal1 = function Modal1() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    modalVisible = _useState2[0],\n    setModalVisible = _useState2[1];\n  var handleButtonPress = function handleButtonPress() {\n    setModalVisible(true);\n  };\n  var handleCloseModal = function handleCloseModal() {\n    setModalVisible(false);\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(Modal, {\n      animationType: \"slide\",\n      transparent: true,\n      visible: modalVisible,\n      onRequestClose: handleCloseModal,\n      children: _jsx(View, {\n        style: styles.modalContainer,\n        children: _jsxs(View, {\n          style: styles.modalContent,\n          children: [_jsx(Text, {\n            style: styles.modalText,\n            children: \"Conte\\xFAdo do modal\"\n          }), _jsx(TouchableOpacity, {\n            style: styles.modalButton,\n            onPress: handleCloseModal,\n            children: _jsx(Text, {\n              style: styles.modalButtonText,\n              children: \"Fechar\"\n            })\n          })]\n        })\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    backgroundColor: '#36457D',\n    width: 150,\n    height: 40,\n    borderRadius: 5,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  buttonText: {\n    color: '#f2f3f4',\n    fontSize: 15,\n    fontWeight: 'bold'\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)'\n  },\n  modalContent: {\n    backgroundColor: '#FFFFFF',\n    padding: 20,\n    borderRadius: 5,\n    alignItems: 'center'\n  },\n  modalText: {\n    fontSize: 18,\n    marginBottom: 10\n  },\n  modalButton: {\n    backgroundColor: '#36457D',\n    width: 100,\n    height: 40,\n    borderRadius: 5,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 10\n  },\n  modalButtonText: {\n    color: '#f2f3f4',\n    fontSize: 15,\n    fontWeight: 'bold'\n  }\n});\nexport default Modal1;","map":{"version":3,"names":["React","useState","View","Text","StyleSheet","TouchableOpacity","Modal","jsx","_jsx","jsxs","_jsxs","Modal1","_useState","_useState2","_slicedToArray","modalVisible","setModalVisible","handleButtonPress","handleCloseModal","style","styles","container","children","animationType","transparent","visible","onRequestClose","modalContainer","modalContent","modalText","modalButton","onPress","modalButtonText","create","flex","alignItems","justifyContent","button","backgroundColor","width","height","borderRadius","buttonText","color","fontSize","fontWeight","padding","marginBottom","marginTop"],"sources":["C:/Users/Pichau/Documents/Programação/reptask-front/reptask/teste/components/Modal.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, StyleSheet, TouchableOpacity, Modal } from 'react-native';\r\n\r\nconst Modal1 = () => {\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n\r\n  const handleButtonPress = () => {\r\n    setModalVisible(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setModalVisible(false);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={modalVisible}\r\n        onRequestClose={handleCloseModal}\r\n      >\r\n        <View style={styles.modalContainer}>\r\n          <View style={styles.modalContent}>\r\n            <Text style={styles.modalText}>Conteúdo do modal</Text>\r\n            <TouchableOpacity style={styles.modalButton} onPress={handleCloseModal}>\r\n              <Text style={styles.modalButtonText}>Fechar</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  button: {\r\n    backgroundColor: '#36457D',\r\n    width: 150,\r\n    height: 40,\r\n    borderRadius: 5,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  buttonText: {\r\n    color: '#f2f3f4',\r\n    fontSize: 15,\r\n    fontWeight: 'bold',\r\n  },\r\n  modalContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n  },\r\n  modalContent: {\r\n    backgroundColor: '#FFFFFF',\r\n    padding: 20,\r\n    borderRadius: 5,\r\n    alignItems: 'center',\r\n  },\r\n  modalText: {\r\n    fontSize: 18,\r\n    marginBottom: 10,\r\n  },\r\n  modalButton: {\r\n    backgroundColor: '#36457D',\r\n    width: 100,\r\n    height: 40,\r\n    borderRadius: 5,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginTop: 10,\r\n  },\r\n  modalButtonText: {\r\n    color: '#f2f3f4',\r\n    fontSize: 15,\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n\r\nexport default Modal1;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}