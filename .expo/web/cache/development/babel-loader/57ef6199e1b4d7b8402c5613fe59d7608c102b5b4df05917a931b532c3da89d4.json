{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useFonts, Inter_900Black } from '@expo-google-fonts/inter';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Task = function Task(props) {\n  var _useState = useState({\n      backgroundColor: props.doneAt ? '#FFF' : '#FFFF',\n      borderColor: props.doneAt ? '#36457D' : '#808080',\n      borderWidth: props.doneAt ? 6 : 2\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    circleStyle = _useState2[0],\n    setCircleStyle = _useState2[1];\n  var handleCirclePress = function handleCirclePress() {\n    setCircleStyle(function (prevStyle) {\n      return _objectSpread(_objectSpread({}, prevStyle), {}, {\n        backgroundColor: prevStyle.backgroundColor === '#FFFF' ? '#FFF' : '#FFFF',\n        borderColor: prevStyle.borderColor === '#808080' ? '#36457D' : '#808080',\n        borderWidth: prevStyle.borderWidth === 2 ? 6 : 2\n      });\n    });\n  };\n  var _useFonts = useFonts({\n      Inter_900Black: Inter_900Black\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontsLoaded = _useFonts2[0];\n  if (!fontsLoaded) {\n    return null;\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.text,\n      children: props.desc + ' '\n    }), _jsx(Text, {\n      children: props.pontuacao + ' pontos '\n    }), _jsx(TouchableOpacity, {\n      onPress: handleCirclePress,\n      children: _jsx(View, {\n        style: [styles.circle, circleStyle]\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n    paddingTop: 15,\n    paddingBottom: 10,\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    width: '70%',\n    borderBottomWidth: 1,\n    borderBottomColor: '#ccc'\n  },\n  text: {\n    fontFamily: 'Inter_900Black',\n    fontSize: 18,\n    fontWeight: '700'\n  },\n  circle: {\n    width: 20,\n    height: 20,\n    borderRadius: 10,\n    borderWidth: 2\n  }\n});\nexport default Task;","map":{"version":3,"names":["React","useState","View","Text","StyleSheet","TouchableOpacity","useFonts","Inter_900Black","jsx","_jsx","jsxs","_jsxs","Task","props","_useState","backgroundColor","doneAt","borderColor","borderWidth","_useState2","_slicedToArray","circleStyle","setCircleStyle","handleCirclePress","prevStyle","_objectSpread","_useFonts","_useFonts2","fontsLoaded","style","styles","container","children","text","desc","pontuacao","onPress","circle","create","display","flexDirection","paddingTop","paddingBottom","justifyContent","alignItems","width","borderBottomWidth","borderBottomColor","fontFamily","fontSize","fontWeight","height","borderRadius"],"sources":["C:/Users/Pichau/Documents/Programação/reptask-front/reptask/teste/components/Task.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native';\r\nimport { useFonts, Inter_900Black } from '@expo-google-fonts/inter';\r\n\r\nconst Task = (props) => {\r\n  const [circleStyle, setCircleStyle] = useState({\r\n    backgroundColor: props.doneAt ? '#FFF' : '#FFFF',\r\n    borderColor: props.doneAt ? '#36457D' : '#808080',\r\n    borderWidth: props.doneAt ? 6 : 2,\r\n  });\r\n\r\n  const handleCirclePress = () => {\r\n    setCircleStyle((prevStyle) => ({\r\n      ...prevStyle,\r\n      backgroundColor: prevStyle.backgroundColor === '#FFFF' ? '#FFF' : '#FFFF',\r\n      borderColor: prevStyle.borderColor === '#808080' ? '#36457D' : '#808080',\r\n      borderWidth: prevStyle.borderWidth === 2 ? 6 : 2,\r\n    }));\r\n  };\r\n\r\n  let [fontsLoaded] = useFonts({\r\n    Inter_900Black,\r\n  });\r\n\r\n  if (!fontsLoaded) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.text}>{props.desc + ' '}</Text>\r\n      <Text>{props.pontuacao + ' pontos '}</Text>\r\n      <TouchableOpacity onPress={handleCirclePress}>\r\n        <View style={[styles.circle, circleStyle]} />\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    paddingTop: 15,\r\n    paddingBottom: 10,\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    width: '70%',\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#ccc',\r\n  },\r\n  text: {\r\n    fontFamily: 'Inter_900Black',\r\n    fontSize: 18,\r\n    fontWeight: '700',\r\n  },\r\n  circle: {\r\n    width: 20,\r\n    height: 20,\r\n    borderRadius: 10,\r\n    borderWidth: 2,\r\n  },\r\n});\r\n\r\nexport default Task;\r\n"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAExC,SAASC,QAAQ,EAAEC,cAAc,QAAQ,0BAA0B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEpE,IAAMC,IAAI,GAAG,SAAPA,IAAIA,CAAIC,KAAK,EAAK;EACtB,IAAAC,SAAA,GAAsCb,QAAQ,CAAC;MAC7Cc,eAAe,EAAEF,KAAK,CAACG,MAAM,GAAG,MAAM,GAAG,OAAO;MAChDC,WAAW,EAAEJ,KAAK,CAACG,MAAM,GAAG,SAAS,GAAG,SAAS;MACjDE,WAAW,EAAEL,KAAK,CAACG,MAAM,GAAG,CAAC,GAAG;IAClC,CAAC,CAAC;IAAAG,UAAA,GAAAC,cAAA,CAAAN,SAAA;IAJKO,WAAW,GAAAF,UAAA;IAAEG,cAAc,GAAAH,UAAA;EAMlC,IAAMI,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAA,EAAS;IAC9BD,cAAc,CAAC,UAACE,SAAS;MAAA,OAAAC,aAAA,CAAAA,aAAA,KACpBD,SAAS;QACZT,eAAe,EAAES,SAAS,CAACT,eAAe,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO;QACzEE,WAAW,EAAEO,SAAS,CAACP,WAAW,KAAK,SAAS,GAAG,SAAS,GAAG,SAAS;QACxEC,WAAW,EAAEM,SAAS,CAACN,WAAW,KAAK,CAAC,GAAG,CAAC,GAAG;MAAC;IAAA,CAChD,CAAC;EACL,CAAC;EAED,IAAAQ,SAAA,GAAoBpB,QAAQ,CAAC;MAC3BC,cAAc,EAAdA;IACF,CAAC,CAAC;IAAAoB,UAAA,GAAAP,cAAA,CAAAM,SAAA;IAFGE,WAAW,GAAAD,UAAA;EAIhB,IAAI,CAACC,WAAW,EAAE;IAChB,OAAO,IAAI;EACb;EAEA,OACEjB,KAAA,CAACT,IAAI;IAAC2B,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BvB,IAAA,CAACN,IAAI;MAAC0B,KAAK,EAAEC,MAAM,CAACG,IAAK;MAAAD,QAAA,EAAEnB,KAAK,CAACqB,IAAI,GAAG;IAAG,CAAO,CAAC,EACnDzB,IAAA,CAACN,IAAI;MAAA6B,QAAA,EAAEnB,KAAK,CAACsB,SAAS,GAAG;IAAU,CAAO,CAAC,EAC3C1B,IAAA,CAACJ,gBAAgB;MAAC+B,OAAO,EAAEb,iBAAkB;MAAAS,QAAA,EAC3CvB,IAAA,CAACP,IAAI;QAAC2B,KAAK,EAAE,CAACC,MAAM,CAACO,MAAM,EAAEhB,WAAW;MAAE,CAAE;IAAC,CAC7B,CAAC;EAAA,CACf,CAAC;AAEX,CAAC;AAED,IAAMS,MAAM,GAAG1B,UAAU,CAACkC,MAAM,CAAC;EAC/BP,SAAS,EAAE;IACTQ,OAAO,EAAE,MAAM;IACfC,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE,EAAE;IACdC,aAAa,EAAE,EAAE;IACjBC,cAAc,EAAE,eAAe;IAC/BC,UAAU,EAAE,QAAQ;IACpBC,KAAK,EAAE,KAAK;IACZC,iBAAiB,EAAE,CAAC;IACpBC,iBAAiB,EAAE;EACrB,CAAC;EACDd,IAAI,EAAE;IACJe,UAAU,EAAE,gBAAgB;IAC5BC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd,CAAC;EACDb,MAAM,EAAE;IACNQ,KAAK,EAAE,EAAE;IACTM,MAAM,EAAE,EAAE;IACVC,YAAY,EAAE,EAAE;IAChBlC,WAAW,EAAE;EACf;AACF,CAAC,CAAC;AAEF,eAAeN,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}